↑default: true
databaseName: flightshare_fullsync
↓CheckDocument [transactions.couchdb.GetDocumentTransaction]: 
  ↓_use_docid [variables.RequestableVariable-1514563638162]: 
    description: Document ID
    value: LFAG
↓DeleteDocument [transactions.couchdb.DeleteDocumentTransaction]: 
  ↓_use_docid [variables.RequestableVariable-1509571721624]: 
    description: Document ID
↓GetDocument [transactions.couchdb.GetDocumentTransaction]: 
  ↓_use_docid [variables.RequestableVariable-1509571287802]: 
    description: Document ID
  ↓_use_conflicts [variables.RequestableVariable-1509571287804]: 
    description: (boolean) – Includes information about conflicts in document. Default is false
↓GetServerInfo [transactions.couchdb.GetServerInfoTransaction]: 
  ↑default: true
↓GetView [transactions.couchdb.GetViewTransaction]: 
  ↓_use_ddoc [variables.RequestableVariable-1508921220580]: 
    description: Design document name
    value: Design_document
  ↓_use_view [variables.RequestableVariable-1508921220582]: 
    description: View function name
    value: ByIACO
  ↓_use_endkey [variables.RequestableVariable-1508922729200]: 
    description: (string) – Stop returning records when the specified key is reached. Optional
    value: LFPNZ
  ↓_use_startkey [variables.RequestableVariable-1508922732303]: 
    description: (string) – Stop returning records when the specified key is reached. Optional
    value: LFPN
↓PostAnonymousDoc [transactions.couchdb.CustomTransaction]: 
  httpData: context.requestedObject.getJsonBody(new org.codehaus.jettison.json.JSONObject())
  httpVerb: POST
  ↓doc [variables.RequestableVariable-1508943115601]: 
↓PostBulkDocuments [transactions.couchdb.PostBulkDocumentsTransaction]: 
  policy: override
  ↓_id [variables.RequestableMultiValuedVariable-1508872379766]: 
    description: Document ids
  ↓data [variables.RequestableMultiValuedVariable-1508872379768]: 
    description: Documents contents
↓PostDocument [transactions.couchdb.PostDocumentTransaction]: 
  policy: override
  ↓_id [variables.RequestableVariable-1508935527257]: 
    description: Document id
  ↓data [variables.RequestableVariable-1508935527259]: 
    description: Document content
↓PostMergeDocument [transactions.couchdb.PostDocumentTransaction]: 
  policy: merge
  ↓_id [variables.RequestableVariable-1509633996953]: 
    description: Document id
  ↓_use_json_base [variables.RequestableVariable-1509633996955]: 
    description: (string) – JSON use as a base for the document (js object). Optional
↓ResetDatabase [transactions.couchdb.ResetDatabaseTransaction]: 
↓Design_document [couchdb.DesignDocument]: 
  docdata: 
    →: |
      '{
        "_id": "_design\/Design_document",
        "filters": {},
        "updates": {},
        "views": {
          "AirportsByIACO": {"map": "function (doc) {\r\n
          try {\r\n
              if (doc.airport)\r\n
                  if (doc.airport.iaco != \"\")\r\n
                      emit(doc.airport.iaco, doc.airport);\r\n
          } catch (err) {\r\n
              log(err.message);\r\n
          }\r\n
      }"},
          "AirportsByCountry": {"map": "function (doc) {\r\n
          try {\r\n
              if (doc.airport)\r\n
                  if (doc.airport.country != \"\")\r\n
                      emit(doc.airport.country, doc.airport);\r\n
          } catch (err) {\r\n
              log(err.message);\r\n
          }\r\n
      }"},
          "AirportsByCity": {"map": "function (doc) {\r\n
          try {\r\n
              if (doc.airport)\r\n
                  if (doc.airport.city != \"\")\r\n
                      emit(doc.airport.city, doc.airport);\r\n
          } catch (err) {\r\n
              log(err.message);\r\n
          }\r\n
      }"},
          "PlanesByTag": {"map": "function (doc) {\r\n
          try {\r\n
              if (doc.plane)\r\n
                  if (doc.plane.tag != \"\")\r\n
                      emit(doc.plane.TAG, doc.plane);\r\n
          } catch (err) {\r\n
              log(err.message);\r\n
          }\r\n
      }"},
          "Flights": {"map": "function (doc) {\r\n
          try {\r\n
              if (doc.flight) {\r\n
                      idx = doc.flight.date + \"-\" + doc.flight.time,\r\n
                      emit(idx, doc._id);\r\n
                      emit(idx, {_id: doc.flight.from});\r\n
                      emit(idx, {_id: doc.flight.to});\r\n
                      emit(idx, {_id: doc.flight.plane});\r\n
              }\r\n
          } catch (err) {\r\n
              log(err.message);\r\n
          }\r\n
      }"},
          "PublishedFlights": {"map": "function (doc) {\r\n
          try {\r\n
              if (doc.PublishedFlight)\r\n
                  emit(doc._id, doc.PublishedFlight);\r\n
          } catch (err) {\r\n
              log(err.message);\r\n
          }\r\n
      }\r\n
      "},
          "AirportsByIACOOrCity": {"map": "function (doc) {\r\n
          try {\r\n
              if (doc.airport)\r\n
                  if (doc.airport.iaco != \"\") {\r\n
                      emit(doc.airport.iaco, doc.airport);\r\n
                  }\r\n
                  if (doc.airport.city != \"\") {\r\n
                      emit(doc.airport.city.toUpperCase(), doc.airport);\r\n
                  }\r\n
          } catch (err) {\r\n
              log(err.message);\r\n
          }\r\n
      }"},
          "PublishRequests": {"map": "function (doc) {\r\n
          try {\r\n
              if (doc.publish) {\r\n
                  emit(doc._id, doc);\r\n
              }\r\n
          } catch (err) {\r\n
              log(err.message);\r\n
          }\r\n
      }"},
          "PublishedFlightsDetails": {"map": "function (doc) {\r\n
          try {\r\n
              if (doc.PublishedFlight) {\r\n
                  emit(doc._id, doc._id);\r\n
                  emit(doc._id, {_id: doc.PublishedFlight.from});\r\n
                  emit(doc._id, {_id: doc.PublishedFlight.to});\r\n
                  emit(doc._id, {_id: doc.PublishedFlight.plane});\r\n
              }\r\n
          } catch (err) {\r\n
              log(err.message);\r\n
          }\r\n
      }\r\n
      \r\n
      "},
          "RegisterRequests": {"map": "function (doc) {\r\n
          try {\r\n
              if (doc.register) {\r\n
                  emit(doc._id, doc);\r\n
              }\r\n
          } catch (err) {\r\n
              log(err.message);\r\n
          }\r\n
      }"},
          "users": {"map": "function (doc) {\r\n
          try {\r\n
              if (doc.userinfo)\r\n
                  emit(doc._id, doc);\r\n
          } catch (err) {\r\n
              log(err.message);\r\n
          }\r\n
      }"}
        }
      }'
↓PublishRequestsListener [couchdb.FullSyncListener]: 
  targetSequence: FlightShare.PublishFlight
  targetView: FlightShare.flightshare_fullsync.Design_document.PublishRequests
↓RegisterRequestListener [couchdb.FullSyncListener]: 
  targetSequence: FlightShare.RegisterOnFlight
  targetView: FlightShare.flightshare_fullsync.Design_document.RegisterRequests